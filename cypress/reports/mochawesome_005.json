{
  "stats": {
    "suites": 3,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-04T16:55:41.847Z",
    "end": "2025-08-04T16:55:43.958Z",
    "duration": 2111,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5fafb874-68fc-4aa0-a550-7be2e42be519",
      "title": "",
      "fullFile": "cypress\\e2e\\categories.cy.ts",
      "file": "cypress\\e2e\\categories.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "26db6312-fd9b-42b6-bb98-1ad290f414e3",
          "title": "GET /products/category/:category",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ae8aecc7-10aa-4f32-88fd-fa99ec75ff5a",
              "title": "Success cases",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return products from the category \"smartphones\"",
                  "fullTitle": "GET /products/category/:category Success cases should return products from the category \"smartphones\"",
                  "timedOut": null,
                  "duration": 647,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0,_api_products__WEBPACK_IMPORTED_MODULE_0__.getProductsByCategory)(validCategory).then((res) => {\n    expect(res.status).to.eq(200);\n    expect(res.body).to.have.property('products').that.is.an('array').and\n        .not.empty;\n    res.body.products.forEach((product) => {\n        var _a;\n        expect(product).to.have.property('category');\n        expect((_a = product.category) === null || _a === void 0 ? void 0 : _a.toLowerCase()).to.eq(validCategory);\n    });\n});",
                  "err": {},
                  "uuid": "58c9df68-7a29-42ee-818c-5ed0f3fa668c",
                  "parentUUID": "ae8aecc7-10aa-4f32-88fd-fa99ec75ff5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the same results regardless of casing",
                  "fullTitle": "GET /products/category/:category Success cases should return the same results regardless of casing",
                  "timedOut": null,
                  "duration": 199,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0,_api_products__WEBPACK_IMPORTED_MODULE_0__.getProductsByCategory)('SmartPhones').then((res) => {\n    expect(res.status).to.eq(200);\n    expect(res.body.products).to.be.an('array').and.not.empty;\n    res.body.products.forEach((product) => {\n        var _a;\n        expect((_a = product.category) === null || _a === void 0 ? void 0 : _a.toLowerCase()).to.eq(validCategory);\n    });\n});",
                  "err": {},
                  "uuid": "b5c69d9a-469b-4bbd-82b3-de450a5023e8",
                  "parentUUID": "ae8aecc7-10aa-4f32-88fd-fa99ec75ff5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should include required product fields",
                  "fullTitle": "GET /products/category/:category Success cases should include required product fields",
                  "timedOut": null,
                  "duration": 183,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0,_api_products__WEBPACK_IMPORTED_MODULE_0__.getProductsByCategory)(validCategory).then((res) => {\n    expect(res.status).to.eq(200);\n    const product = res.body.products[0];\n    expect(product).to.include.all.keys('id', 'title', 'price', 'category');\n});",
                  "err": {},
                  "uuid": "5590c876-9b22-47a1-a12f-3db17aae76c1",
                  "parentUUID": "ae8aecc7-10aa-4f32-88fd-fa99ec75ff5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return consistent results for the same category",
                  "fullTitle": "GET /products/category/:category Success cases should return consistent results for the same category",
                  "timedOut": null,
                  "duration": 333,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0,_api_products__WEBPACK_IMPORTED_MODULE_0__.getProductsByCategory)(validCategory).then((res1) => {\n    (0,_api_products__WEBPACK_IMPORTED_MODULE_0__.getProductsByCategory)(validCategory).then((res2) => {\n        expect(res1.status).to.eq(200);\n        expect(res2.status).to.eq(200);\n        expect(res1.body.products).to.deep.eq(res2.body.products);\n    });\n});",
                  "err": {},
                  "uuid": "e6b25ea8-f967-487e-a433-35bf4d056419",
                  "parentUUID": "ae8aecc7-10aa-4f32-88fd-fa99ec75ff5a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "58c9df68-7a29-42ee-818c-5ed0f3fa668c",
                "b5c69d9a-469b-4bbd-82b3-de450a5023e8",
                "5590c876-9b22-47a1-a12f-3db17aae76c1",
                "e6b25ea8-f967-487e-a433-35bf4d056419"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1362,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2062f119-5af2-44e8-af22-b0bbb7e7a531",
              "title": "Validation and error cases",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return empty or error for invalid category",
                  "fullTitle": "GET /products/category/:category Validation and error cases should return empty or error for invalid category",
                  "timedOut": null,
                  "duration": 159,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0,_api_products__WEBPACK_IMPORTED_MODULE_0__.getProductsByCategory)(invalidCategory, { failOnStatusCode: false }).then((res) => {\n    expect(res.status).to.be.oneOf([200, 404]);\n    if (res.status === 200) {\n        expect(res.body).to.have.property('products').that.is.an('array')\n            .and.empty;\n    }\n    else {\n        expect(res.body).to.have.property('message');\n    }\n});",
                  "err": {},
                  "uuid": "b731d528-b957-4019-b320-5b0c73211c41",
                  "parentUUID": "2062f119-5af2-44e8-af22-b0bbb7e7a531",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return empty list for category with URL-encoded special characters",
                  "fullTitle": "GET /products/category/:category Validation and error cases should return empty list for category with URL-encoded special characters",
                  "timedOut": null,
                  "duration": 158,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0,_api_products__WEBPACK_IMPORTED_MODULE_0__.getProductsByCategory)('laptops%20and%20devices', {\n    failOnStatusCode: false,\n}).then((res) => {\n    expect(res.status).to.eq(200);\n    expect(res.body).to.have.property('products').that.is.an('array').and\n        .empty;\n    expect(res.body).to.have.property('total', 0);\n});",
                  "err": {},
                  "uuid": "74ae992c-8627-4133-875f-dd8fecb51d64",
                  "parentUUID": "2062f119-5af2-44e8-af22-b0bbb7e7a531",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return empty list for category with unencoded space",
                  "fullTitle": "GET /products/category/:category Validation and error cases should return empty list for category with unencoded space",
                  "timedOut": null,
                  "duration": 167,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0,_api_products__WEBPACK_IMPORTED_MODULE_0__.getProductsByCategory)('mobile accessories', {\n    failOnStatusCode: false,\n}).then((res) => {\n    expect(res.status).to.eq(200);\n    expect(res.body).to.have.property('products').that.is.an('array').and\n        .empty;\n    expect(res.body).to.have.property('total', 0);\n});",
                  "err": {},
                  "uuid": "b284d16b-8b40-4446-9c0c-4e957ac5ebac",
                  "parentUUID": "2062f119-5af2-44e8-af22-b0bbb7e7a531",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 200 and empty product list for numeric category ID",
                  "fullTitle": "GET /products/category/:category Validation and error cases should return 200 and empty product list for numeric category ID",
                  "timedOut": null,
                  "duration": 161,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0,_api_products__WEBPACK_IMPORTED_MODULE_0__.getProductsByCategory)('12345', { failOnStatusCode: false }).then((res) => {\n    expect(res.status).to.eq(200);\n    expect(res.body).to.have.property('products').that.is.an('array').and\n        .empty;\n    expect(res.body).to.have.property('total', 0);\n});",
                  "err": {},
                  "uuid": "b72a8569-1b6f-4bd7-b03d-202caa7eff23",
                  "parentUUID": "2062f119-5af2-44e8-af22-b0bbb7e7a531",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b731d528-b957-4019-b320-5b0c73211c41",
                "74ae992c-8627-4133-875f-dd8fecb51d64",
                "b284d16b-8b40-4446-9c0c-4e957ac5ebac",
                "b72a8569-1b6f-4bd7-b03d-202caa7eff23"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 645,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}